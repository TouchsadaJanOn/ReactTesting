{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jano2187\\\\Documents\\\\GitHub\\\\ReactTesting\\\\front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jano2187\\\\Documents\\\\GitHub\\\\ReactTesting\\\\front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\jano2187\\\\Documents\\\\GitHub\\\\ReactTesting\\\\front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jano2187\\\\Documents\\\\GitHub\\\\ReactTesting\\\\front_end\\\\src\\\\pages\\\\QuestionPage\\\\CreateQuestions.js\";\nimport { Button, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './CreateQuestion.css';\nimport axios from \"axios\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {\n      margin: theme.spacing(1)\n    }\n  };\n});\nexport default function CreateQuestions() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var refresh = function refresh() {\n    window.location.reload();\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      asker = _useState2[0],\n      setAsker = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      question = _useState4[0],\n      setQuestion = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      QuestionSuccess = _useState6[0],\n      setQuestionSuccess = _useState6[1];\n\n  var handleOnSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var question_data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              question_data = {\n                asker: asker,\n                question: question\n              };\n\n              try {\n                axios.post(\"http://localhost:9001/users/createQuestion\", question_data).then(function (res) {\n                  return console.log(\"Question created\");\n                });\n                setQuestionSuccess(true);\n              } catch (e) {\n                console.log(\"Question failed to create\");\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleOnSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var setSuccess = function setSuccess() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: QuestionSuccess ? \" \" : \"none\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"success_style\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \" Question Successfully Submitted \"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"column-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Ask a Question\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"p-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Your name\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"name-style\",\n    value: asker,\n    onChange: function onChange(e) {\n      return setAsker(e.target.value);\n    },\n    placeholder: \"Type your name here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"p-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Enter your question below\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    class: \"textarea-style\",\n    value: question,\n    onChange: function onChange(e) {\n      return setQuestion(e.target.value);\n    },\n    placeholder: \"Type your question here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"secondary\",\n    className: classes.button,\n    onClick: refresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Send Question\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, setSuccess())))));\n}","map":{"version":3,"sources":["C:/Users/jano2187/Documents/GitHub/ReactTesting/front_end/src/pages/QuestionPage/CreateQuestions.js"],"names":["Button","makeStyles","React","useState","axios","useStyles","theme","button","margin","spacing","CreateQuestions","classes","refresh","window","location","reload","asker","setAsker","question","setQuestion","QuestionSuccess","setQuestionSuccess","handleOnSubmit","event","preventDefault","question_data","post","then","res","console","log","e","setSuccess","display","form","target","value"],"mappings":"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","sourcesContent":["import { Button, makeStyles } from '@material-ui/core';\r\nimport React , {useState} from 'react';\r\nimport './CreateQuestion.css'\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      \r\n    },\r\n  }));\r\nexport default function CreateQuestions(){\r\n    const classes = useStyles();\r\n\r\n  const refresh = () =>{ \r\n    window.location.reload();\r\n  }\r\n\r\n    const [asker, setAsker] = useState(\"\");\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [QuestionSuccess, setQuestionSuccess] = useState(false);\r\n\r\n    const handleOnSubmit = async(event) => {\r\n        event.preventDefault();\r\n        const question_data = {\r\n          asker, \r\n          question\r\n        };\r\n\r\n        try{\r\n            axios.post(\"http://localhost:9001/users/createQuestion\", question_data)\r\n            .then(res=>console.log(\"Question created\"))\r\n            setQuestionSuccess(true);\r\n            \r\n          }catch(e){\r\n            console.log(\"Question failed to create\")\r\n          }\r\n        };\r\n\r\n        const setSuccess = () => {\r\n            return (\r\n              <div style={{\r\n                display: QuestionSuccess ? \" \":\"none\",\r\n              }}>\r\n                <p className='success_style'> Question Successfully Submitted </p>\r\n              </div>\r\n            );\r\n          };\r\n\r\n         \r\n    \r\n    return(\r\n        <div>\r\n            \r\n    <form className={classes.form} onSubmit={handleOnSubmit}>\r\n            <div class = \"header\">\r\n            <div class = \"column-text\">\r\n        <h1>\r\n            Ask a Question\r\n            </h1>\r\n            <div class=\"element\">\r\n            <p class='p-style'>\r\n                    Your name\r\n                </p>\r\n                <input class =\"name-style\" value={asker} onChange = {(e)=>setAsker(e.target.value)} placeholder='Type your name here...'>\r\n                </input>\r\n                <p class='p-style'>\r\n                    Enter your question below\r\n                </p>\r\n                <textarea class =\"textarea-style\" value={question} onChange = {(e)=>setQuestion(e.target.value)} placeholder='Type your question here...'>\r\n                </textarea>\r\n            {/* <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n            >\r\n                Send\r\n            </Button> */}\r\n            <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={refresh}\r\n            >\r\n                Send Question\r\n            </Button>\r\n            </div>\r\n            <div>\r\n            {setSuccess()}\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}