{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jano2187\\\\Documents\\\\GitHub\\\\ReactTesting\\\\front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jano2187\\\\Documents\\\\GitHub\\\\ReactTesting\\\\front_end\\\\src\\\\pages\\\\QuestionPage\\\\ViewQuestions.js\";\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from \"uuid\";\nimport './ViewQuestion.css';\nexport default function ViewQuestions() {\n  var _this = this;\n\n  // const [questions, setQuestions] = useState([]);\n  // const [update, setUpdate] = useState(0);\n  // const [comment, setComment] = useState(\"\");\n  // useEffect(() => {\n  //     fetch('http://localhost:9001/users/viewQuestion')  \n  //       .then(res => res.json())\n  //       .then(data => setQuestions(data))\n  //   }, [update])\n  //   const question_vote = (id, votes) =>{\n  //     var newVotes = votes == null ? 1 : votes + 1;\n  //     var updatequestion = {'id': id, 'votes': newVotes}\n  //     fetch('http://localhost:9001/users/viewQuestion', \n  //         {\n  //             method:'PATCH', \n  //             body: JSON.stringify(updatequestion),\n  //             headers: {\n  //               \"Content-Type\": \"application/json; charset=utf-8\",\n  //             }\n  //         })  \n  //       .then(res => res.json())\n  //       .then(setUpdate(update + 1))\n  //       .then(console.log(\"Vote count completed\"))\n  // }\n  // const submitComment = (questionID) =>{\n  //     var id = uuidv4();\n  //     var qID = questionID;\n  //     var addComment = {\n  //         'id': id, \n  //         'qID': qID, \n  //         'comment': comment\n  //     }\n  //     fetch('http://localhost:9001/comment/question_comment', \n  //         {\n  //             method:'POST', \n  //             body: JSON.stringify(addComment),\n  //             headers: {\n  //               \"Content-Type\": \"application/json; charset=utf-8\",\n  //             }\n  //         })  \n  //       .then(res => res.json())\n  //       .then(data => console.log(data))\n  //   }\n  // return(\n  //     <div>\n  //         <div class = \"header\">\n  //         <div class = \"column-text\">\n  //             <h1>\n  //                 View All Questions\n  //                 </h1>\n  //             <div class=\"element\">\n  //                     <div className=\"card bg-primary\">\n  //                         <div className=\"card-body\">\n  //                         <div class=\"accordion-item\">\n  //                                 {questions.map(q =>\n  //                                 <div class=\"accordion-item\">\n  //                                     <div className='title-color' key={q.id}>{q.asker == null ? \"Unknown\":q.asker}</div>\n  //                                         <div className=\"question-style\" key={q.id}>{q.question}</div>\n  //                                         <button className=\"btn bg-danger font-weight-bold text-white text-center m-4\" value=\"Vote\" onClick={() => question_vote(q.id, q.votes)}>Votes Count: {q.votes == null ? \"0\":q.votes}</button>\n  //                                         <div>\n  //                                             <form className='form-style'>\n  //                                                 <textarea value={comment} className=\"textarea-style2\" onChange={(e)=>setComment(e.target.value)}></textarea>\n  //                                                 <button value=\"Submit A Comment\" className=\"btn btn-success m-3 \" onClick={() => submitComment(q.id)}>Submit A Comment</button>\n  //                                             </form>\n  //                                     </div>\n  //                               </div>)}\n  //                               </div>\n  //                   </div>\n  //             </div>\n  //         </div>\n  //         </div>\n  //         </div>\n  //     </div>\n  // );\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      update = _useState4[0],\n      setUpdate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      response = _useState6[0],\n      setResponse = _useState6[1];\n\n  useEffect(function () {\n    fetch('http://localhost:9001/users/viewQuestion').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setQuestions(data);\n    });\n  }, [update]);\n\n  var voteQuestion = function voteQuestion(id, votes) {\n    var newVotes = votes == null ? 1 : votes + 1;\n    var updatequestion = {\n      'id': id,\n      'votes': newVotes\n    };\n    fetch('http://localhost:9001/users/viewQuestion', {\n      method: 'PATCH',\n      body: JSON.stringify(updatequestion),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(setUpdate(update + 1)).then(console.log(\"finished\"));\n  };\n\n  var submitResponse = function submitResponse(questionID) {\n    var id = uuidv4();\n    var qID = questionID;\n    var addResponse = {\n      'id': id,\n      'qID': qID,\n      'response': response\n    };\n    fetch('http://localhost:9001/comment/responses', {\n      method: 'POST',\n      body: JSON.stringify(addResponse),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center container p-3 mb-2 bg-secondary text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header text-white bg-dark header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Questions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"accordion\",\n    id: \"questionAccordian\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, questions.map(function (q) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"accordion-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      class: \"accordion-header\",\n      id: \"headingOne\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"accordion-button\",\n      type: \"button\",\n      \"data-bs-toggle\": \"collapse\",\n      \"data-bs-target\": \"#collapseOne\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"collapseOne\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-dark\",\n      key: q.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, q.title == null ? \"No Title\" : q.title))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"collapseOne\",\n      class: \"accordion-collapse collapse show\",\n      \"aria-labelledby\": \"headingOne\",\n      \"data-bs-parent\": \"#questionAccordian\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"accordion-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-dark\",\n      key: q.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, q.question), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-dark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, \"(Votes: \", q.votes == null ? \"0\" : q.votes, \")\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-dark\",\n      value: \"Vote\",\n      onClick: function onClick() {\n        return voteQuestion(q.id, q.votes);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }, \"Vote\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card text-center container p-3 mb-2 bg-secondary text-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: response,\n      className: \"form-control form-control-lg\",\n      onChange: function onChange(e) {\n        return setResponse(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      value: \"Submit A Response\",\n      className: \"btn btn-primary\",\n      onClick: function onClick() {\n        return submitResponse(q.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, \"Submit A Response\")))))), \")\");\n  })))));\n}","map":{"version":3,"sources":["C:/Users/jano2187/Documents/GitHub/ReactTesting/front_end/src/pages/QuestionPage/ViewQuestions.js"],"names":["React","useState","useEffect","v4","uuidv4","ViewQuestions","questions","setQuestions","update","setUpdate","response","setResponse","fetch","then","res","json","data","voteQuestion","id","votes","newVotes","updatequestion","method","body","JSON","stringify","headers","console","log","submitResponse","questionID","qID","addResponse","map","q","title","question","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport './ViewQuestion.css'\r\n\r\nexport default function ViewQuestions(){\r\n\r\n    // const [questions, setQuestions] = useState([]);\r\n    // const [update, setUpdate] = useState(0);\r\n    // const [comment, setComment] = useState(\"\");\r\n\r\n    // useEffect(() => {\r\n    //     fetch('http://localhost:9001/users/viewQuestion')  \r\n    //       .then(res => res.json())\r\n    //       .then(data => setQuestions(data))\r\n    //   }, [update])\r\n\r\n    //   const question_vote = (id, votes) =>{\r\n\r\n    //     var newVotes = votes == null ? 1 : votes + 1;\r\n\r\n    //     var updatequestion = {'id': id, 'votes': newVotes}\r\n        \r\n    //     fetch('http://localhost:9001/users/viewQuestion', \r\n    //         {\r\n    //             method:'PATCH', \r\n    //             body: JSON.stringify(updatequestion),\r\n    //             headers: {\r\n    //               \"Content-Type\": \"application/json; charset=utf-8\",\r\n    //             }\r\n    //         })  \r\n    //       .then(res => res.json())\r\n    //       .then(setUpdate(update + 1))\r\n    //       .then(console.log(\"Vote count completed\"))\r\n    // }\r\n\r\n    // const submitComment = (questionID) =>{\r\n    //     var id = uuidv4();\r\n    //     var qID = questionID;\r\n    //     var addComment = {\r\n    //         'id': id, \r\n    //         'qID': qID, \r\n    //         'comment': comment\r\n    //     }\r\n\r\n    //     fetch('http://localhost:9001/comment/question_comment', \r\n    //         {\r\n    //             method:'POST', \r\n    //             body: JSON.stringify(addComment),\r\n    //             headers: {\r\n    //               \"Content-Type\": \"application/json; charset=utf-8\",\r\n    //             }\r\n    //         })  \r\n    //       .then(res => res.json())\r\n    //       .then(data => console.log(data))\r\n    //   }\r\n\r\n    // return(\r\n    //     <div>\r\n    //         <div class = \"header\">\r\n    //         <div class = \"column-text\">\r\n    //             <h1>\r\n    //                 View All Questions\r\n    //                 </h1>\r\n    //             <div class=\"element\">\r\n    //                     <div className=\"card bg-primary\">\r\n    //                         <div className=\"card-body\">\r\n    //                         <div class=\"accordion-item\">\r\n    //                                 {questions.map(q =>\r\n    //                                 <div class=\"accordion-item\">\r\n    //                                     <div className='title-color' key={q.id}>{q.asker == null ? \"Unknown\":q.asker}</div>\r\n    //                                         <div className=\"question-style\" key={q.id}>{q.question}</div>\r\n    //                                         <button className=\"btn bg-danger font-weight-bold text-white text-center m-4\" value=\"Vote\" onClick={() => question_vote(q.id, q.votes)}>Votes Count: {q.votes == null ? \"0\":q.votes}</button>\r\n    //                                         <div>\r\n    //                                             <form className='form-style'>\r\n    //                                                 <textarea value={comment} className=\"textarea-style2\" onChange={(e)=>setComment(e.target.value)}></textarea>\r\n    //                                                 <button value=\"Submit A Comment\" className=\"btn btn-success m-3 \" onClick={() => submitComment(q.id)}>Submit A Comment</button>\r\n    //                                             </form>\r\n    //                                     </div>\r\n    //                               </div>)}\r\n    //                               </div>\r\n    //                   </div>\r\n    //             </div>\r\n    //         </div>\r\n    //         </div>\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const [update, setUpdate] = useState(0);\r\n    const [response, setResponse] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:9001/users/viewQuestion')  \r\n          .then(res => res.json())\r\n          .then(data => setQuestions(data))\r\n      }, [update])\r\n\r\n      const voteQuestion = (id, votes) =>{\r\n\r\n        var newVotes = votes == null ? 1 : votes + 1;\r\n\r\n        var updatequestion = {'id': id, 'votes': newVotes}\r\n        \r\n        fetch('http://localhost:9001/users/viewQuestion', \r\n            {\r\n                method:'PATCH', \r\n                body: JSON.stringify(updatequestion),\r\n                headers: {\r\n                  \"Content-Type\": \"application/json; charset=utf-8\",\r\n                }\r\n            })  \r\n          .then(res => res.json())\r\n          .then(setUpdate(update + 1))\r\n          .then(console.log(\"finished\"))\r\n    }\r\n\r\n    const submitResponse = (questionID) =>{\r\n        var id = uuidv4();\r\n        var qID = questionID;\r\n        var addResponse = {'id': id, 'qID': qID, 'response': response}\r\n\r\n        fetch('http://localhost:9001/comment/responses', \r\n            {\r\n                method:'POST', \r\n                body: JSON.stringify(addResponse),\r\n                headers: {\r\n                  \"Content-Type\": \"application/json; charset=utf-8\",\r\n                }\r\n            })  \r\n          .then(res => res.json())\r\n          .then(data => console.log(data))\r\n      }\r\n\r\n    return (\r\n    <div>\r\n        <br></br>\r\n        <div className=\"card text-center container p-3 mb-2 bg-secondary text-white\">\r\n            <div className=\"card-header text-white bg-dark header\">Questions</div>\r\n            <div className=\"card-body \">\r\n\r\n                <div class=\"accordion\" id=\"questionAccordian\">\r\n                    {questions.map(q =>\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"headingOne\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <div className=\"text-dark\" key={q.id}>{q.title == null ? \"No Title\":q.title}</div>\r\n                            </button>\r\n                        </h2>\r\n                    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#questionAccordian\">\r\n                        <div class=\"accordion-body\">\r\n                            <div className=\"text-dark\" key={q.id}>{q.question}</div>\r\n                            <br />\r\n\r\n                            <p className=\"text-dark\">(Votes: {q.votes == null ? \"0\":q.votes})</p>\r\n                            <button className=\"btn btn-outline-dark\" value=\"Vote\" onClick={() => voteQuestion(q.id, q.votes)}>Vote</button>\r\n\r\n                            <div>\r\n                                <br></br>\r\n                                <div className=\"card text-center container p-3 mb-2 bg-secondary text-white\">\r\n                                <form>\r\n                                    <textarea value={response} className=\"form-control form-control-lg\" onChange={(e)=>setResponse(e.target.value)}></textarea>\r\n                                    <br/>\r\n                                    <button value=\"Submit A Response\" className=\"btn btn-primary\" onClick={() => submitResponse(q.id)}>Submit A Response</button>\r\n                                </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>)\r\n                    </div>)}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}